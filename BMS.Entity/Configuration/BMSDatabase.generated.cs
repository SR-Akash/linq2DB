//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : FMS
	/// Data Source    : 10.209.99.144
	/// Server Version : 15.00.4375
	/// </summary>
	public partial class FMSDB : LinqToDB.Data.DataConnection
	{
		

		public FMSDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FMSDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FMSDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FMSDB(DataOptions<FMSDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="tblAccountHead")]
	public partial class TblAccountHead
	{
		[Column(),                        PrimaryKey,  Identity] public long     Id                    { get; set; } // bigint
		[Column("name"),                  NotNull              ] public string   Name                  { get; set; } // nvarchar(150)
		[Column("isIncomeOrExpence"),     NotNull              ] public int      IsIncomeOrExpence     { get; set; } // int
		[Column("buildingId"),               Nullable          ] public long?    BuildingId            { get; set; } // bigint
		[Column("isActive"),              NotNull              ] public bool     IsActive              { get; set; } // bit
		[Column("intActionBy"),           NotNull              ] public long     IntActionBy           { get; set; } // bigint
		[Column("dteLastActionDateTime"), NotNull              ] public DateTime DteLastActionDateTime { get; set; } // datetime
		[Column("dteServerDateTime"),     NotNull              ] public DateTime DteServerDateTime     { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_tblIncomeExpence_tblAccountHead_BackReference (dbo.tblIncomeExpence)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="AccountHeadId", CanBeNull=true)]
		public IEnumerable<TblIncomeExpence> TblIncomeExpences { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblBuildingInformation")]
	public partial class TblBuildingInformation
	{
		[Column(),                        PrimaryKey,  Identity] public long     Id                    { get; set; } // bigint
		[Column("name"),                  NotNull              ] public string   Name                  { get; set; } // nvarchar(250)
		[Column("address"),               NotNull              ] public string   Address               { get; set; } // nvarchar(250)
		[Column("cityId"),                   Nullable          ] public long?    CityId                { get; set; } // bigint
		[Column("cityName"),                 Nullable          ] public string   CityName              { get; set; } // nvarchar(50)
		[Column("noOfFloor"),                Nullable          ] public int?     NoOfFloor             { get; set; } // int
		[Column("remarks"),                  Nullable          ] public string   Remarks               { get; set; } // nvarchar(250)
		[Column("attatchment"),              Nullable          ] public string   Attatchment           { get; set; } // nvarchar(250)
		[Column("intActionBy"),              Nullable          ] public long?    IntActionBy           { get; set; } // bigint
		[Column("dteLastActionDateTime"), NotNull              ] public DateTime DteLastActionDateTime { get; set; } // datetime
		[Column("dteServerDateTime"),     NotNull              ] public DateTime DteServerDateTime     { get; set; } // datetime
		[Column("status"),                NotNull              ] public int      Status                { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_tblBuildingInformation_tblCity (dbo.tblCity)
		/// </summary>
		[Association(ThisKey="CityId", OtherKey="Id", CanBeNull=true)]
		public TblCity City { get; set; }

		/// <summary>
		/// FK_tblFlatInformation_tblBuildingInformation_BackReference (dbo.tblFlatInformation)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BuildingId", CanBeNull=true)]
		public IEnumerable<TblFlatInformation> TblFlatInformation { get; set; }

		/// <summary>
		/// FK_tblIncomeExpence_tblBuildingInformation_BackReference (dbo.tblIncomeExpence)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BuildingId", CanBeNull=true)]
		public IEnumerable<TblIncomeExpence> TblIncomeExpences { get; set; }

		/// <summary>
		/// FK_tblUserBuildingInfo_tblBuildingInformation_BackReference (dbo.tblUserBuildingInfo)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BuildingId", CanBeNull=true)]
		public IEnumerable<TblUserBuildingInfo> TblUserBuildingInfo { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblCity")]
	public partial class TblCity
	{
		[Column(),           PrimaryKey,  Identity] public long   Id       { get; set; } // bigint
		[Column("name"),        Nullable          ] public string Name     { get; set; } // nvarchar(150)
		[Column("isActive"), NotNull              ] public bool   IsActive { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_tblBuildingInformation_tblCity_BackReference (dbo.tblBuildingInformation)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CityId", CanBeNull=true)]
		public IEnumerable<TblBuildingInformation> TblBuildingInformation { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblFlatInformation")]
	public partial class TblFlatInformation
	{
		[Column(),                        PrimaryKey,  Identity] public long      Id                    { get; set; } // bigint
		[Column("buildingId"),            NotNull              ] public long      BuildingId            { get; set; } // bigint
		[Column("buildingName"),             Nullable          ] public string    BuildingName          { get; set; } // nvarchar(250)
		[Column("flatNo"),                NotNull              ] public string    FlatNo                { get; set; } // nvarchar(150)
		[Column("floorNumber"),           NotNull              ] public int       FloorNumber           { get; set; } // int
		[Column("size"),                  NotNull              ] public double    Size                  { get; set; } // float
		[Column("numberOfRoom"),          NotNull              ] public int       NumberOfRoom          { get; set; } // int
		[Column(),                           Nullable          ] public string    Attatchment           { get; set; } // nvarchar(250)
		[Column("flatHolderTypeId"),      NotNull              ] public int       FlatHolderTypeId      { get; set; } // int
		[Column("flatHolderTypeName"),    NotNull              ] public string    FlatHolderTypeName    { get; set; } // nvarchar(50)
		[Column("flatUserName"),          NotNull              ] public string    FlatUserName          { get; set; } // nvarchar(250)
		[Column("contract"),              NotNull              ] public string    Contract              { get; set; } // nvarchar(15)
		[Column("email"),                 NotNull              ] public string    Email                 { get; set; } // nvarchar(50)
		[Column("rentAmount"),               Nullable          ] public double?   RentAmount            { get; set; } // float
		[Column("remarks"),                  Nullable          ] public string    Remarks               { get; set; } // nvarchar(250)
		[Column("intActionBy"),           NotNull              ] public long      IntActionBy           { get; set; } // bigint
		[Column("dteLastActionDateTime"), NotNull              ] public DateTime  DteLastActionDateTime { get; set; } // datetime
		[Column("dteServerDateTime"),        Nullable          ] public DateTime? DteServerDateTime     { get; set; } // datetime
		[Column("status"),                NotNull              ] public int       Status                { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_tblFlatInformation_tblBuildingInformation (dbo.tblBuildingInformation)
		/// </summary>
		[Association(ThisKey="BuildingId", OtherKey="Id", CanBeNull=false)]
		public TblBuildingInformation Building { get; set; }

		/// <summary>
		/// FK_tblIncomeExpence_tblFlatInformation_BackReference (dbo.tblIncomeExpence)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="FlatId", CanBeNull=true)]
		public IEnumerable<TblIncomeExpence> TblIncomeExpences { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblIncomeExpence")]
	public partial class TblIncomeExpence
	{
		[Column(),                        Identity   ] public long      Id                    { get; set; } // bigint
		[Column("buildingId"),            NotNull    ] public long      BuildingId            { get; set; } // bigint
		[Column("flatId"),                NotNull    ] public long      FlatId                { get; set; } // bigint
		[Column("flatHolderTypeId"),      NotNull    ] public long      FlatHolderTypeId      { get; set; } // bigint
		[Column("flatHolderTypeName"),    NotNull    ] public string    FlatHolderTypeName    { get; set; } // nvarchar(150)
		[Column("transactionDate"),       NotNull    ] public DateTime  TransactionDate       { get; set; } // datetime
		[Column("isIncomeOrExpence"),     NotNull    ] public int       IsIncomeOrExpence     { get; set; } // int
		[Column("accountHeadId"),         NotNull    ] public long      AccountHeadId         { get; set; } // bigint
		[Column("accountHeadName"),       NotNull    ] public string    AccountHeadName       { get; set; } // nvarchar(150)
		[Column("attatchment"),              Nullable] public string    Attatchment           { get; set; } // nvarchar(250)
		[Column("intActionBy"),           NotNull    ] public long      IntActionBy           { get; set; } // bigint
		[Column("dteLastActionDateTime"), NotNull    ] public DateTime  DteLastActionDateTime { get; set; } // datetime
		[Column("dteServerDateTime"),        Nullable] public DateTime? DteServerDateTime     { get; set; } // datetime
		[Column("status"),                NotNull    ] public int       Status                { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_tblIncomeExpence_tblAccountHead (dbo.tblAccountHead)
		/// </summary>
		[Association(ThisKey="AccountHeadId", OtherKey="Id", CanBeNull=false)]
		public TblAccountHead AccountHead { get; set; }

		/// <summary>
		/// FK_tblIncomeExpence_tblBuildingInformation (dbo.tblBuildingInformation)
		/// </summary>
		[Association(ThisKey="BuildingId", OtherKey="Id", CanBeNull=false)]
		public TblBuildingInformation Building { get; set; }

		/// <summary>
		/// FK_tblIncomeExpence_tblFlatInformation (dbo.tblFlatInformation)
		/// </summary>
		[Association(ThisKey="FlatId", OtherKey="Id", CanBeNull=false)]
		public TblFlatInformation Flat { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblUser")]
	public partial class TblUser
	{
		[Column("intUserId"),             PrimaryKey, Identity] public long      IntUserId             { get; set; } // bigint
		[Column("strUserName"),           Nullable            ] public string    StrUserName           { get; set; } // nvarchar(100)
		[Column("strLoginId"),            Nullable            ] public string    StrLoginId            { get; set; } // nvarchar(50)
		[Column("strPassword"),           Nullable            ] public string    StrPassword           { get; set; } // nvarchar(50)
		[Column("strEmailAddress"),       Nullable            ] public string    StrEmailAddress       { get; set; } // nvarchar(100)
		[Column("isDefaultPassword"),     Nullable            ] public bool?     IsDefaultPassword     { get; set; } // bit
		[Column("strContact"),            Nullable            ] public string    StrContact            { get; set; } // nvarchar(50)
		[Column("dtePasswordExpDate"),    Nullable            ] public DateTime? DtePasswordExpDate    { get; set; } // date
		[Column("intUserType"),           Nullable            ] public long?     IntUserType           { get; set; } // bigint
		[Column("intUserReferenceId"),    Nullable            ] public long?     IntUserReferenceId    { get; set; } // bigint
		[Column("strUserReferenceNo"),    Nullable            ] public string    StrUserReferenceNo    { get; set; } // nvarchar(50)
		[Column("isSuperUser"),           Nullable            ] public bool?     IsSuperUser           { get; set; } // bit
		[Column("intActionBy"),           Nullable            ] public long?     IntActionBy           { get; set; } // bigint
		[Column("dteLastActionDateTime"), Nullable            ] public DateTime? DteLastActionDateTime { get; set; } // datetime
		[Column("dteServerDateTime"),     Nullable            ] public DateTime? DteServerDateTime     { get; set; } // datetime
		[Column("isActive"),              Nullable            ] public bool?     IsActive              { get; set; } // bit
		[Column("dteOTPDateTime"),        Nullable            ] public DateTime? DteOTPDateTime        { get; set; } // datetime
		[Column("intUserOTP"),            Nullable            ] public long?     IntUserOTP            { get; set; } // bigint
		[Column("strDeviceId"),           Nullable            ] public string    StrDeviceId           { get; set; } // nvarchar(250)

		#region Associations

		/// <summary>
		/// FK_tblUserBuildingInfo_tblUser_BackReference (dbo.tblUserBuildingInfo)
		/// </summary>
		[Association(ThisKey="IntUserId", OtherKey="IntUserId", CanBeNull=true)]
		public IEnumerable<TblUserBuildingInfo> TblUserBuildingInfo { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tblUserBuildingInfo")]
	public partial class TblUserBuildingInfo
	{
		[Column(),                    PrimaryKey,  Identity] public long      Id                { get; set; } // bigint
		[Column("intUserId"),         NotNull              ] public long      IntUserId         { get; set; } // bigint
		[Column("buildingId"),        NotNull              ] public long      BuildingId        { get; set; } // bigint
		[Column("dteServerDateTime"),    Nullable          ] public DateTime? DteServerDateTime { get; set; } // datetime
		[Column("intActionBy"),          Nullable          ] public long?     IntActionBy       { get; set; } // bigint
		[Column("isActive"),          NotNull              ] public bool      IsActive          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_tblUserBuildingInfo_tblBuildingInformation (dbo.tblBuildingInformation)
		/// </summary>
		[Association(ThisKey="BuildingId", OtherKey="Id", CanBeNull=false)]
		public TblBuildingInformation Building { get; set; }

		/// <summary>
		/// FK_tblUserBuildingInfo_tblUser (dbo.tblUser)
		/// </summary>
		[Association(ThisKey="IntUserId", OtherKey="IntUserId", CanBeNull=false)]
		public TblUser IntUser { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static TblAccountHead Find(this ITable<TblAccountHead> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TblBuildingInformation Find(this ITable<TblBuildingInformation> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TblCity Find(this ITable<TblCity> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TblFlatInformation Find(this ITable<TblFlatInformation> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TblUser Find(this ITable<TblUser> table, long IntUserId)
		{
			return table.FirstOrDefault(t =>
				t.IntUserId == IntUserId);
		}

		public static TblUserBuildingInfo Find(this ITable<TblUserBuildingInfo> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
